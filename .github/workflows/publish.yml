name: Publish to NuGet

on:
  push:
    branches:
      - 'releases/*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Find latest release version
      id: find_latest_version
      shell: bash
      run: |
        # Get all branches under releases/
        branches=$(git ls-remote --heads origin | grep 'refs/heads/releases/' | awk -F'/' '{print $NF}')
        echo "Found branches: $branches"

        # Find the highest version number
        latest_version=$(echo "$branches" | sort -V | tail -n 1)
        echo "Latest version is $latest_version"

        # Set the version as an output
        echo "version=$latest_version" >> $GITHUB_OUTPUT

    - name: Update version in SimpleQueue.csproj
      run: |
        NEW_VERSION=${{ steps.find_latest_version.outputs.version }}
        echo "Updating version to $NEW_VERSION in SimpleQueue.csproj"
        sed -i 's|<Version>.*</Version>|<Version>'$NEW_VERSION'</Version>|' ./SimpleQueue/SimpleQueue.csproj

    - name: Update version in SimpleQueue.RabbitMQ.csproj
      run: |
        NEW_VERSION=${{ steps.find_latest_version.outputs.version }}
        echo "Updating version to $NEW_VERSION in SimpleQueue.RabbitMQ.csproj"
        sed -i 's|<Version>.*</Version>|<Version>'$NEW_VERSION'</Version>|' ./SimpleQueue.RabbitMQ/SimpleQueue.RabbitMQ.csproj
                
    - name: Update version in SimpleQueue.InMemory.csproj
      run: |
        NEW_VERSION=${{ steps.find_latest_version.outputs.version }}
        echo "Updating version to $NEW_VERSION in SimpleQueue.InMemory.csproj"
        sed -i 's|<Version>.*</Version>|<Version>'$NEW_VERSION'</Version>|' ./SimpleQueue.InMemory/SimpleQueue.InMemory.csproj

    - name: Create nupkg directory
      run: mkdir -p ./nupkg

    - name: Restore dependencies for SimpleQueue
      run: dotnet restore ./SimpleQueue/SimpleQueue.csproj

    - name: Restore dependencies for SimpleQueue.RabbitMQ
      run: dotnet restore ./SimpleQueue.RabbitMQ/SimpleQueue.RabbitMQ.csproj

    - name: Restore dependencies for SimpleQueue.InMemory
      run: dotnet restore ./SimpleQueue.InMemory/SimpleQueue.InMemory.csproj

    - name: Build SimpleQueue
      run: dotnet build ./SimpleQueue/SimpleQueue.csproj --configuration Release --no-restore

    - name: Pack SimpleQueue
      run: dotnet pack ./SimpleQueue/SimpleQueue.csproj --configuration Release --no-build --output ./nupkg

    - name: Build SimpleQueue.RabbitMQ
      run: dotnet build ./SimpleQueue.RabbitMQ/SimpleQueue.RabbitMQ.csproj --configuration Release --no-restore

    - name: Pack SimpleQueue.RabbitMQ
      run: dotnet pack ./SimpleQueue.RabbitMQ/SimpleQueue.RabbitMQ.csproj --configuration Release --no-build --output ./nupkg
            
    - name: Build SimpleQueue.InMemory
      run: dotnet build ./SimpleQueue.InMemory/SimpleQueue.InMemory.csproj --configuration Release --no-restore

    - name: Pack SimpleQueue.InMemory
      run: dotnet pack ./SimpleQueue.InMemory/SimpleQueue.InMemory.csproj --configuration Release --no-build --output ./nupkg

    - name: Publish to NuGet
      run: dotnet nuget push ./nupkg/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
